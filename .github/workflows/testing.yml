name: Automated Testing on commit

on:
  push:

jobs:
  backend:
    runs-on: ubuntu-latest
    env:
      DB_NAME: backend_tests
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: "127.0.0.1"
      DB_PORT: 5432

    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_DB: backend_tests
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    # Actions
    steps:
      # Check out branch
      - name: Checkout branch
        uses: actions/checkout@v2

      # Set python version
      - id: setup_python
        name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      # Install backend dependencies
      - id: python_cache
        uses: actions/cache@v3
        with:
          path: backend/venv
          key: pip-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('**/requirements.txt') }}

      - if: steps.python_cache.outputs.cache-hit != 'true'
        run: |
          cd backend
          # Check if venv exists (restored from secondary keys if any, and delete)
          # You might not need this line if you only have one primary key for the venv caching
          # I kept it in my code as a fail-safe
          if [ -d "venv" ]; then rm -rf venv; fi

          # Re-create the venv
          python3 -m venv venv

          # Install dependencies
          venv/bin/python3 -m pip install -r requirements.txt

      # Run MyPy
      - name: Run MyPy
        working-directory: backend
        run: |
          source venv/bin/activate
          mypy --install-types --non-interactive .

      # Run Flake8
      - name: Run Flake8
        working-directory: backend
        run: |
          source venv/bin/activate
          flake8 --statistics

      # Test backend
      - name: Test backend
        run: |
          cd backend
          source venv/bin/activate
          pytest -s
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install modules
        working-directory: frontend
        run: npm ci
      - name: Run ESLint
        working-directory: frontend
        run: npm run lint:prod
      - name: Run tsx
        working-directory: frontend
        run: npx tsc --noEmit --noErrorTruncation
